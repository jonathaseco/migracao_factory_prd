{
	"name": "KCOR_INCR_P1-1_EARA_DIN_AUX",
	"properties": {
		"description": "Pipeline que realiza a ingestão de dados on-premises de todas as tabelas do KCOR da Ecovias do Araguaia  para camada bronze",
		"activities": [
			{
				"name": "IngerirTabelaCargaCompletaIncr",
				"description": "Realiza a ingestão da carga de dados, que pode ser completa ou seguindo o valor do campo \"condicao\" do arquivo de parâmetro.\nCaso seja necessário realizar a carga parcial da tabela, no campo \"Query\" da aba \"Source\" é realizada a substituição de $PARAMETRO$ (existente no arquivo de parâmetro \"kcor_[unidade].xlsx\") pelo valor do parâmetro 'dias_atualizacao_p11'). ",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SetarValorCondicaoIncr",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT *, getdate() AS data_ingestao FROM ', pipeline().parameters.nome_tabela, ' WHERE ', replace(variables('condicao_where'), '$PARAMETRO$', pipeline().parameters.dias_atualizacao_p11))",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "dataset_KCOR_EARA",
						"type": "DatasetReference",
						"parameters": {
							"schema": "x",
							"table": "x"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "dlPath",
						"type": "DatasetReference",
						"parameters": {
							"caminho": {
								"value": "@concat('camada_bronze/kcor/', pipeline().parameters.Concessao, '/', formatDateTime(utcnow(),'yyyy_MM_dd'))",
								"type": "Expression"
							},
							"arquivo": {
								"value": "@concat(pipeline().parameters.nome_tabela,'_',formatDateTime(utcnow(),'yyyyMMdd'),'.parquet')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "LerArquivoParametroIncr",
				"description": "Lê o arquivo de parâmetro",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"dataset": {
						"referenceName": "planilha_kcor_eara",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SetarValorCondicaoIncr",
				"description": "Caso o nome da tabela em processamento esteja no arquivo de parâmetro, então atualiza a variável \"condicao_where\" com o valor do campo \"condicao\" do arquivo de parâmetro (condição True). Caso contrário, então \"condicao_where\" recebe valor 1 = 1 (condição False).",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "VerificarTabelaCargaParcialIncr",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('VerificarTabelaCargaParcialIncr').output.FilteredItemsCount,0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "SetaCondicaoWhere_Default_copy1",
							"description": "Seta a variável \"condicao_where\" com o valor 1 = 1. Ou seja, será necessário realizar a carga completa ou de D-X da tabela.",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "condicao_where",
								"value": {
									"value": "1=1",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SetaCondicaoWhere",
							"description": "Seta a variável \"condicao_where\" com o valor do campo \"condicao\" do arquivo de parâmetro. Ou seja, não será necessário realizar a carga completa da tabela.",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "condicao_where",
								"value": {
									"value": "@activity('VerificarTabelaCargaParcialIncr').output.value[0].condicao",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "VerificarTabelaCargaParcialIncr",
				"description": "Esse passo verifica se será necessário fazer a carga parcial da tabela em processamento. \nVerifica se o nome da tabela atual está no arquivo de parâmetro e se o valor do campo 'cargacompleta' é igual a false.\nCaso positivo (entra na condição True do passo SetarValorCondicao), então deve-se realizar uma carga parcial da tabela seguindo o campo \"condicao\" do arquivo de parâmetros.\nCaso negativo (entra na condição False do passo SetarValorCondicao), então não deverá ser realizado a carga parcial da tabela (posteriormente no passo RealizarIngestao será verificado se a carga será completa ou D-X da tabela).\n\nobs: há três formatos de ingestão de dados: carga total, carga parcial, carga D-X\n-carga completa: todos os registros da tabela serão ingeridos no data lake\n-carga parcial: apenas alguns registros da tabela serão ingeridos no data lake. As condições para a ingestão dos dados estão no campo \"condicao\" do arquivo de parâmetro da base de dados. De forma geral, serão ingeridos dados dos últimos X anos (a depender da base de dados).\n-carga D-X: devem ser ingeridos no data lake apenas os registros dos últimos X dias, ou seja, é a ingestão de dados incrementais.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "LerArquivoParametroIncr",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LerArquivoParametroIncr').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(equals(item().tabela, pipeline().parameters.nome_tabela),equals(pipeline().parameters.cargacompleta, false))",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"cargacompleta": {
				"type": "bool"
			},
			"concessao": {
				"type": "string"
			},
			"dias_atualizacao_p11": {
				"type": "string"
			},
			"nome_tabela": {
				"type": "string"
			}
		},
		"variables": {
			"nome_tabela": {
				"type": "String"
			},
			"aux": {
				"type": "String"
			},
			"contador": {
				"type": "String"
			},
			"condicao_where": {
				"type": "String"
			},
			"check": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "KCOR/INCREMENTAL/OLD"
		},
		"annotations": [],
		"lastPublishTime": "2023-10-16T17:19:05Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}